box:
  id: openjdk:8-jdk
  ports:
    - "8080"

dev:
  steps:
    - script:
      name: gradle bootRun
      code: |
        ./gradlew bootRun

build:
  steps:
    - script:
        name: gradle build
        code: |
          ./gradlew --full-stacktrace -q --project-cache-dir=$WERCKER_CACHE_DIR build

    - script:
        name: ls-wercker-root
        code: |
            echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT

    - script:
        name: preserve kubernetes.template.yml
        code: cp kubernetes.yml.template $WERCKER_OUTPUT_DIR/kubernetes.yml.template

    - script:
        name: copy-output
        code: |
            mv build $WERCKER_OUTPUT_DIR
        
    - script:
        name: ls-wercker-output-dir
        code: |
            echo WERCKER_OUTPUT_DIR=$WERCKER_OUTPUT_DIR; ls -ls $WERCKER_OUTPUT_DIR

build-image:
  box:
    id: openjdk:8-jdk-alpine

  steps:
    - script:
      code: |
        mkdir -p /app
        mv build/libs/*.jar /app

    - internal/docker-push:
        repository: wcr.io/${WERCKER_APPLICATION_OWNER_NAME}/city-api
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT,$WERCKER_GIT_COMMIT,latest
        cmd: java -jar /app/demo-1.0.jar
        ports: "8080"
        working-dir: /build

deploy-to-cluster:
    box:
        id: alpine
        cmd: /bin/sh
    steps:

    - script:
        name: ls-wercker-root
        code: |
            echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT

    - bash-template

    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes.yml

    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        raw-global-args: --namespace=$KUBERNETES_NAMESPACE
        command: apply -f kubernetes.yml
